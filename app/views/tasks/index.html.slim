.top
  .top.margin






= search_form_for @q, class: 'mb-5' do |f|


  .form-group.row
    = f.label :name_cont, '名称', class: 'col-sm2 col-form-label'
    .col-sm-10
      = f.search_field :name_cont, class: 'form-control'
  .form-gruop.row
    = f.label :created_at_gtaq, '登録日時', class: 'col-sm2 col-form-label'
    .col-sm-10
      = f.search_field :created_at_gteq, class: 'form-control'
    

    .form-group
      = f.submit class: 'btn btn-primary'


= link_to '新規登録', new_task_path, class: 'btn btn-primary'
= link_to 'エクスポート', tasks_path(format: :csv),class: 'btn btn-primary mb-6 ml-4'

.mt-4
  = paginate @tasks
  = page_entries_info @tasks

= form_tag import_tasks_path, multipart: true, class: 'mb-3 mt-5' do
  = file_field_tag :file
  = submit_tag "インポート", class: 'btn-primary'

.mb-3
table.table.table-hover
  thead.thead-default
    tr
      // ransackの提供するsort_linkヘルパーを利用する、こうすることでソート操作ができる見出し部分を表示することができる ( 第一引数にはransackメソッドで呼び出して得られたRansack::Searchオブジェクト(ここでは@q)
      // 第二引数にはソートを行う対象のカラム(ここでは「名称」を表す:name)を指定します)
      th = sort_link(@q, :name)
      th = Task.human_attribute_name(:created_at)
      th = Task.human_attribute_name(:tag_list)
      th

    tbody 
      - @tasks.each do |task|
        tr id="task-#{task.id}"
          // クリックすると "tasks/[タスクID]"という詳細表示のURLに還移するようになる
          td= link_to task.name, task_path(task)
          td= task.created_at
          // タグ表示欄を追加する
          td= render 'tasks/tag_list', tag_list: task.tag_list


          td 
            = link_to '編集', edit_task_path(task), class: 'btn btn-primary mr-4'
            = link_to '削除', task, method: :delete, remote: true, data: { confirm: "タスク「#{task.name}」を削除します。よろしいですか〜？"}, class: 'btn btn-danger delete',id: "delete_link_#{task.id}"
            // 上記のlink_to メソッドが出力したHTML(a要素)をみてみると、data-remote属性が付与されていることがわかる。
            // remote: trueを設定すると何が変わるかを一言でいうと、リクエストのhtml形式ではなくjs形式になる